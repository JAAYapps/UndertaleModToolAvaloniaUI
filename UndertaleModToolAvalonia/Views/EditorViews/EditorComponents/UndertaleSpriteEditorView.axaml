<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vm="using:UndertaleModToolAvalonia.ViewModels.EditorViewModels.EditorComponents"
			 xmlns:controls="using:UndertaleModToolAvalonia.Controls"
			 xmlns:undertale="using:UndertaleModLib.Models"
			 xmlns:converters="using:UndertaleModToolAvalonia.Converters"
			 xmlns:utils="using:UndertaleModToolAvalonia.Utilities"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="UndertaleModToolAvalonia.Views.EditorViews.EditorComponents.UndertaleSpriteEditorView"
			 x:DataType="vm:UndertaleSpriteEditorViewModel">
	<UserControl.Resources>
		<ResourceDictionary>
			<utils:EnumValues EnumType="undertale:UndertaleSprite+SpriteType" x:Key="SpriteType" />
			<utils:EnumValues EnumType="undertale:UndertaleSprite+SepMaskType" x:Key="SepMaskType" />
			<utils:EnumValues EnumType="undertale:AnimSpeedType" x:Key="AnimSpeedType" />
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"/>
			<ColumnDefinition Width="3*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<TextBlock Grid.Row="0" Grid.Column="0" Margin="3">Name</TextBlock>
		<controls:UndertaleStringReference Grid.Row="0" Grid.Column="1" Margin="3" ObjectReference="{Binding UndertaleSprite.Name}"/>

		<TextBlock Grid.Row="2" Grid.Column="0" Margin="3">Size</TextBlock>
		<Grid Grid.Row="2" Grid.Column="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0" Margin="3" Text="{Binding UndertaleSprite.Width}"/>
			<TextBox Grid.Column="1" Margin="3" Text="{Binding UndertaleSprite.Height}"/>
		</Grid>

		<TextBlock Grid.Row="3" Grid.Column="0" Margin="3">Margin Left/Right/Bottom/Top</TextBlock>
		<Grid Grid.Row="3" Grid.Column="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0" Margin="3" Text="{Binding UndertaleSprite.MarginLeft}"/>
			<TextBox Grid.Column="1" Margin="3" Text="{Binding UndertaleSprite.MarginRight}"/>
			<TextBox Grid.Column="2" Margin="3" Text="{Binding UndertaleSprite.MarginBottom}"/>
			<TextBox Grid.Column="3" Margin="3" Text="{Binding UndertaleSprite.MarginTop}"/>
		</Grid>

		<TextBlock Grid.Row="4" Grid.Column="0" Margin="3">Transparent</TextBlock>
		<CheckBox Grid.Row="4" Grid.Column="1" Margin="3" IsChecked="{Binding UndertaleSprite.Transparent}"/>

		<TextBlock Grid.Row="5" Grid.Column="0" Margin="3">Smooth</TextBlock>
		<CheckBox Grid.Row="5" Grid.Column="1" Margin="3" IsChecked="{Binding UndertaleSprite.Smooth}"/>

		<TextBlock Grid.Row="6" Grid.Column="0" Margin="3">Preload</TextBlock>
		<CheckBox Grid.Row="6" Grid.Column="1" Margin="3" IsChecked="{Binding UndertaleSprite.Preload}"/>

		<TextBlock Grid.Row="7" Grid.Column="0" Margin="3">Bounding box mode</TextBlock>
		<TextBox Grid.Row="7" Grid.Column="1" Margin="3" Text="{Binding UndertaleSprite.BBoxMode}"/>

		<TextBlock Grid.Row="8" Grid.Column="0" Margin="3">SepMasks</TextBlock>
		<ComboBox ItemsSource="{Binding Source={StaticResource SepMaskType}}" SelectedItem="{Binding UndertaleSprite.SepMasks}"
                            Grid.Row="8" Grid.Column="1" Margin="3"/>

		<TextBlock Grid.Row="9" Grid.Column="0" Margin="3">Origin</TextBlock>
		<Grid Grid.Row="9" Grid.Column="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0" Margin="3" Text="{Binding UndertaleSprite.OriginXWrapper}"/>
			<TextBox Grid.Column="1" Margin="3" Text="{Binding UndertaleSprite.OriginYWrapper}"/>
		</Grid>

		<TextBlock Grid.Row="10" Grid.Column="0" Margin="3">Textures</TextBlock>
		<Grid Grid.Row="10" Grid.Column="1" RowDefinitions="*,*">
			<DataGrid Grid.Row="0" Margin="3" ItemsSource="{Binding UndertaleSprite.Textures, Mode=OneWay}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" x:Name="TextureList"
					AutoGenerateColumns="False" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray"
				  HeadersVisibility="None" SelectionMode="Single">
				<DataGrid.KeyBindings>
					<KeyBinding Gesture="Delete" Command="{Binding RemoveSpriteCommand}" CommandParameter="{Binding #TextureList.SelectedItem}"/>
				</DataGrid.KeyBindings>
				<DataGrid.Styles>
					<Style Selector="DataGridCell:selected /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="#FF26A0DA"/>
					</Style>
				</DataGrid.Styles>
				<DataGrid.Columns>
					<DataGridTemplateColumn Width="*">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<controls:UndertaleObjectReference Margin="20,0,0,0" CanRemove="True"
																   Loaded="UndertaleObjectReference_Loaded"
																   ObjectReference="{Binding Texture, Mode=TwoWay}"
																   ObjectType="{x:Type undertale:UndertaleTexturePageItem}"
																   RemoveCommand="{Binding $parent[DataGrid].DataContext.RemoveSpriteCommand}"
																   RemoveCommandParameter="{Binding}"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</DataGrid>
			<Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Margin="5" DoubleTapped="TextBlock_DoubleTapped">
				<TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
			</Button>
		</Grid>
		<Viewbox Grid.Row="11" Grid.Column="1" Stretch="Uniform" StretchDirection="DownOnly">
			<Border Background="{StaticResource TransparencyGridBrushBrush}">
				<controls:UndertaleTexturePageItemDisplay x:Name="TextureDisplay"
														  TextureItem="{Binding $parent[UserControl].DataContext.SelectedTexture}"
														  Editor="{Binding $parent[UserControl].DataContext.Editor}"
														  TextureCacheService="{Binding $parent[UserControl].DataContext.TextureCacheService}"
														  FileService="{Binding $parent[UserControl].DataContext.FileService}"/>
			</Border>
		</Viewbox>

		<Button Grid.Row="12" Grid.Column="1" Content="Export all frames (or Spine data if this is a Spine sprite)" Command="{Binding ExportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=StorageProvider}" />

		<TextBlock Grid.Row="13" Grid.Column="0" Margin="3">Collision masks</TextBlock>
		<Grid Grid.Row="13" Grid.Column="1" RowDefinitions="*,*">
			<DataGrid Grid.Row="0" Grid.Column="1" Margin="3" ItemsSource="{Binding UndertaleSprite.CollisionMasks, Mode=OneWay}" SelectedItem="{Binding SelectedMaskItem}" x:Name="MaskList"
					  AutoGenerateColumns="False" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray"
					  HeadersVisibility="None" SelectionMode="Single">
				<DataGrid.KeyBindings>
					<KeyBinding Gesture="Delete" Command="{Binding RemoveMaskCommand}" CommandParameter="{Binding #MaskList.SelectedItem}"/>
				</DataGrid.KeyBindings>
				<DataGrid.Styles>
					<Style Selector="DataGridCell:selected /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="#FF26A0DA"/>
					</Style>
				</DataGrid.Styles>
				<DataGrid.Columns>
					<DataGridTemplateColumn Width="*">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Grid Margin="20,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Column="0" VerticalAlignment="Center" Text="(CollisionMask)"/>
									<Button Grid.Column="1" x:Name="RemoveButton" Content=" X " Command="{Binding $parent[UserControl].DataContext.RemoveMaskCommand}" CommandParameter="{Binding #MaskList.SelectedItem}" ToolTip.Tip="Remove"/>
								</Grid>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</DataGrid>
			<Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Margin="5" DoubleTapped="Button_DoubleTapped">
				<TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
			</Button>
		</Grid>
		

		<ContentControl Grid.Row="14" Grid.Column="1" Margin="3" DataContext="{Binding SelectedMaskItem, Mode=OneWay}">
			<ContentControl.Template>
				<ControlTemplate>
					<StackPanel Name="MaskEditor" IsVisible="{Binding Converter={x:Static converters:IsNonNullObjectConverter.Instance}}">
						<Viewbox Stretch="None">
							<Border BorderThickness="2" BorderBrush="Gray" Name="MaskBorder">
								<Image Stretch="None" Name="MaskImage" RenderOptions.BitmapInterpolationMode="None">
									<Image.Source>
										<MultiBinding>
											<MultiBinding.Converter>
												<converters:MaskImageConverter/>
											</MultiBinding.Converter>
											<Binding Path="Width" Mode="OneWay"/>
											<Binding Path="Height" Mode="OneWay"/>
											<Binding Path="Data" Mode="OneWay"/>
										</MultiBinding>
									</Image.Source>
								</Image>
							</Border>
						</Viewbox>
						<TextBlock Text="Invalid mask data!" Foreground="Red" Name="MaskIsInvalid" IsVisible="{Binding #MaskImage.Source, Converter={x:Static converters:IsNullConverter.Instance}}"/>

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<Button Grid.Row="0" Grid.Column="0" Content="Import mask" Command="{Binding $parent[UserControl].DataContext.MaskImportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=StorageProvider}" x:Name="MaskImport"/>
							<Button Grid.Row="0" Grid.Column="3" Content="Export mask" Command="{Binding $parent[UserControl].DataContext.MaskExportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=StorageProvider}" x:Name="MaskExport"
									IsEnabled="{Binding #MaskImage.Source, Converter={x:Static converters:IsNullConverter.Instance}, ConverterParameter=Invert}"/>
						</Grid>
					</StackPanel>
					<!--<ControlTemplate.Triggers>
						<Trigger SourceName="MaskImage" Property="Source" Value="{x:Null}">
							<Trigger.Setters>
								<Setter TargetName="MaskBorder" Property="BorderBrush" Value="Red"/>
								<Setter TargetName="MaskIsInvalid" Property="Visibility" Value="Visible"/>
								<Setter TargetName="MaskExport" Property="IsEnabled" Value="False"/>
							</Trigger.Setters>
						</Trigger>
						<Trigger Property="DataContext" Value="{x:Null}">
							<Trigger.Setters>
								<Setter TargetName="MaskEditor" Property="Visibility" Value="Hidden"/>
							</Trigger.Setters>
						</Trigger>
						<Trigger Property="DataContext" Value="{x:Static CollectionView.NewItemPlaceholder}">
							<Trigger.Setters>
								<Setter TargetName="MaskEditor" Property="Visibility" Value="Hidden"/>
							</Trigger.Setters>
						</Trigger>
					</ControlTemplate.Triggers>-->
				</ControlTemplate>
			</ContentControl.Template>
		</ContentControl>

		<!--<ContentControl Grid.Row="14" Grid.Column="1" Margin="3"
              DataContext="{Binding SelectedMaskItem, Mode=OneWay}">
			<StackPanel Name="MaskEditor"
						IsVisible="{Binding Converter={x:Static converters:IsNonNullObjectConverter.Instance}}">
				<Viewbox Stretch="None">
					<Border BorderThickness="2"
							BorderBrush="{Binding #MaskImage.Source, Converter={x:Static converters:NullToRedBrushConverter.Instance}}">
						<Image Stretch="None" Name="MaskImage"
							   RenderOptions.BitmapInterpolationMode="None">
							<Image.Source>
								<MultiBinding Converter="{x:Static converters:MaskImageConverter.Instance}">
									<Binding Path="UndertaleSprite.Width" Mode="OneWay"/>
									<Binding Path="UndertaleSprite.Height" Mode="OneWay"/>
									<Binding Path="UndertaleSprite.Data" Mode="OneWay"/>
								</MultiBinding>
							</Image.Source>
						</Image>
					</Border>
				</Viewbox>

				<TextBlock Text="Invalid mask data!" Foreground="Red" Name="MaskIsInvalid"
						   IsVisible="{Binding #MaskImage.Source, Converter={x:Static converters:IsNullConverter.Instance}}"/>

				<Grid ColumnDefinitions="*,*,*" RowDefinitions="Auto">
					<Button Grid.Column="0" Content="Import mask" Click="MaskImport_Click" Name="MaskImport"/>

					<Button Grid.Column="2" Content="Export mask" Click="MaskExport_Click" Name="MaskExport"
							IsEnabled="{Binding #MaskImage.Source, Converter={x:Static converters:IsNullConverter.Instance}, ConverterParameter=Invert}"/>
				</Grid>
			</StackPanel>
		</ContentControl>-->
		
		<TextBlock Grid.Row="15" Grid.Column="0" Margin="3">Is special type?</TextBlock>
		<CheckBox Grid.Row="15" Grid.Column="1" Margin="3" IsChecked="{Binding UndertaleSprite.IsSpecialType}"/>

		<Grid Grid.Row="16" Grid.ColumnSpan="2" Margin="0" IsVisible="{Binding UndertaleSprite.IsSpecialType, Mode=OneWay}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="3*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<TextBlock Grid.Row="0" Grid.Column="0" Margin="3">Version</TextBlock>
			<TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding UndertaleSprite.SVersion}"/>

			<TextBlock Grid.Row="1" Grid.Column="0" Margin="3">Type</TextBlock>
			<ComboBox ItemsSource="{Binding Source={StaticResource SpriteType}}" SelectedItem="{Binding UndertaleSprite.SSpriteType}"
                                Grid.Row="1" Grid.Column="1" Margin="3"/>

			<Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="0" IsVisible="{x:Static Member=utils:UndertaleHelper.IsGMS2}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="3*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Grid.Column="0" Margin="3">Playback speed</TextBlock>
				<TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding UndertaleSprite.GMS2PlaybackSpeed}"/>

				<TextBlock Grid.Row="1" Grid.Column="0" Margin="3">Playback speed type</TextBlock>
				<ComboBox ItemsSource="{Binding Source={StaticResource AnimSpeedType}}" SelectedItem="{Binding UndertaleSprite.GMS2PlaybackSpeedType}"
                                    Grid.Row="1" Grid.Column="1" Margin="3"/>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
